DECLARE
cnt number;
phv_cursor_execcnt number;
phv_awr_execcnt number;
any_plan_exists number;
latest_phv_awr number;
top_phv_by_time_1_value number;
top_phv_by_time_1_duration number;
top_phv_by_time_1_execs number;
top_phv_by_time_2_value number;
top_phv_by_time_2_duration number;
top_phv_by_time_2_execs number;
top_phv_by_execs_1_value number;
top_phv_by_execs_1_duration number;
top_phv_by_execs_1_execs number;
top_phv_by_execs_2_value number;
top_phv_by_execs_2_duration number;
top_phv_by_execs_2_execs number;
BEGIN
    FOR v_unq_sqlids in (select distinct(sql_id) from gv$active_session_history where sample_time > sysdate - 20/(24*60) group by sql_id order by sql_id)
    LOOP
                select count(distinct(SQL_plan_hash_value)) into cnt from gv$active_Session_history where sample_time > sysdate - 20/(24*60) and sql_id = v_unq_sqlids.sql_id and sql_plan_hash_value <> 0 ;
                        if cnt > 1 THEN
                                FOR v_unq_phv in (select distinct(sql_plan_hash_value) from gv$active_Session_history where sample_time > sysdate - 20/(24*60) and sql_id = v_unq_sqlids.sql_id and sql_plan_hash_value <> 0)
                                LOOP
                                select sum(executions) into phv_cursor_execcnt from gv$sql where sql_id = v_unq_sqlids.sql_id and plan_hash_value = v_unq_phv.sql_plan_hash_value ;
                                select sum(executions_total) into phv_awr_execcnt from dba_hist_SQLSTAT where sql_id = v_unq_sqlids.sql_id and plan_hash_value = v_unq_phv.sql_plan_hash_value  ;

                                IF (phv_cursor_execcnt > 0 and phv_cursor_execcnt is not null and phv_awr_execcnt is null ) THEN
                                        select count(distinct(plan_hash_value)) into any_plan_exists from dba_hist_SQLSTAT where sql_id = v_unq_sqlids.sql_id;
                                        IF (any_plan_exists > 0 and any_plan_exists is not null) THEN
                                        dbms_output.put_line('------------------------------------------------------------------------------------------------------------');
                                        DBMS_OUTPUT.PUT_LINE ('SQL_ID : '||v_unq_sqlids.sql_id||' POTENTIALLY CHANGED PHV TO NEW PHV '||v_unq_phv.sql_plan_hash_value||', PLEASE REVIEW THE 
OLD/NEW PLAN ');
                                        FOR potential_changed_new_plan in (select distinct (plan_hash_value),max(time) last_exec_time,sum(executions) execs,round(avg(avg_elapsed_time),4) avgsec from (select plan_hash_value,to_char(last_active_time,'Mon/DD/YYYY HH24:MI:SS' ) time,executions,round(elapsed_time/executions/1000/1000,4) avg_elapsed_time from gv$sql where sql_id 
= v_unq_sqlids.sql_id and plan_hash_value = v_unq_phv.sql_plan_hash_value  order by time asc)
group by plan_hash_value)
                                        LOOP
                                                DBMS_OUTPUT.PUT_LINE ('POTENTIAL_CHANGED_NEW_PLAN : '||v_unq_sqlids.sql_id||', PHV : '||potential_changed_new_plan.plan_hash_value||', AVGSECS : '||potential_changed_new_plan.avgsec||', EXECS_TOTAL : '||potential_changed_new_plan.execs);
                                        END LOOP;
                                        FOR top_phvs_by_time in (select plan_hash_value,avgsec,execs from (select distinct(plan_hash_value),round(avg("avgsec"),4) avgsec,sum(executions) execs from (select a.instance_number inst_id, a.snap_id,a.plan_hash_value, begin_interval_time btime, abs(extract(minute from (end_interval_time-begin_interval_time)) + extract(hour from (end_interval_time-begin_interval_time))*60 + extract(day from (end_interval_time-begin_interval_time))*24*60) minutes,executions_delta executions, round(ELAPSED_TIME_delta/1000000/greatest(executions_delta,1),4) "avgsec" from dba_hist_SQLSTAT a, dba_hist_snapshot b where a.sql_id = v_unq_sqlids.sql_id and a.snap_id=b.snap_id and
a.instance_number=b.instance_number and a.executions_delta is not null and a.executions_delta > 0 order by snap_id , a.instance_number) group by plan_hash_value order by 2) where rownum <= 2)
                                        LOOP
                                                DBMS_OUTPUT.PUT_LINE ('TOP_PLAN_BY_AVG_EXEC_TIME : '||v_unq_sqlids.sql_id||', PHV : '||top_phvs_by_time.plan_hash_value||', AVGSECS : '||top_phvs_by_time.avgsec||', EXECS_TOTAL : '||top_phvs_by_time.execs);
                                        END LOOP;
                                        FOR top_phvs_by_execs in (select plan_hash_value,avgsec,execs from (select distinct(plan_hash_value),round(avg("avgsec"),4) avgsec,sum(executions) execs from (select a.instance_number inst_id, a.snap_id,a.plan_hash_value, begin_interval_time btime, abs(extract(minute from (end_interval_time-begin_interval_time)) + extract(hour from (end_interval_time-begin_interval_time))*60 + extract(day from (end_interval_time-begin_interval_time))*24*60) minutes,executions_delta executions, round(ELAPSED_TIME_delta/1000000/greatest(executions_delta,1),4) "avgsec" from dba_hist_SQLSTAT a, dba_hist_snapshot b where a.sql_id = v_unq_sqlids.sql_id and a.snap_id=b.snap_id and a.instance_number=b.instance_number and a.executions_delta is not null and a.executions_delta > 0 order by snap_id , a.instance_number) group by plan_hash_value order by 3 desc) where rownum <= 2)
                                        LOOP
                                                DBMS_OUTPUT.PUT_LINE ('TOP_PLAN_BY_MOST_EXECS : '||v_unq_sqlids.sql_id||', PHV : '||top_phvs_by_execs.plan_hash_value||', AVGSECS : '||top_phvs_by_execs.avgsec||', EXECS_TOTAL : '||top_phvs_by_execs.execs);
                                        END LOOP;
                                        dbms_output.put_line('------------------------------------------------------------------------------------------------------------');
                                        END IF;
                                END IF;

                                select sum(executions_total) into phv_awr_execcnt from dba_hist_SQLSTAT where sql_id = v_unq_sqlids.sql_id and plan_hash_value = v_unq_phv.sql_plan_hash_value and executions_total > 10 ;
                                IF (phv_cursor_execcnt > 0 and phv_cursor_execcnt is not null and phv_awr_execcnt is not null ) THEN
                                        select count(*) into latest_phv_awr from (select distinct(plan_hash_value) from (select plan_hash_value from (select * from (select a.instance_number inst_id, a.snap_id,a.plan_hash_value, to_char(begin_interval_time,'dd-mon-yy hh24:mi') btime, abs(extract(minute from (end_interval_time-begin_interval_time)) + extract(hour from (end_interval_time-begin_interval_time))*60 + extract(day from (end_interval_time-begin_interval_time))*24*60) minutes, executions_delta executions, round(ELAPSED_TIME_delta/1000000/greatest(executions_delta,1),4) "avg duration (sec)" from dba_hist_SQLSTAT a, dba_hist_snapshot b where a.sql_id = v_unq_sqlids.sql_id and a.snap_id=b.snap_id and a.instance_number=b.instance_number order by snap_id desc , a.instance_number desc ) where rownum <= 6))) where plan_hash_value = v_unq_phv.sql_plan_hash_value;
                                        IF ( latest_phv_awr = 0 ) THEN
                                        dbms_output.put_line('------------------------------------------------------------------------------------------------------------');
                                        DBMS_OUTPUT.PUT_LINE ('SQL_ID : '||v_unq_sqlids.sql_id||' POTENTIALLY CHANGED PHV TO OLD PHV '||v_unq_phv.sql_plan_hash_value||', PLEASE REVIEW BOTH OF THE OLD PLANS ');
                                        FOR potential_changed_old_plan in (select distinct (plan_hash_value),max(time) last_exec_time,sum(executions) execs,round(avg(avg_elapsed_time),4) avgsec from (select plan_hash_value,to_char(last_active_time,'Mon/DD/YYYY HH24:MI:SS' ) time,executions,round(elapsed_time/executions/1000/1000,4) avg_elapsed_time from gv$sql where sql_id 
= v_unq_sqlids.sql_id and plan_hash_value = v_unq_phv.sql_plan_hash_value  order by time asc)
group by plan_hash_value)
                                        LOOP
                                                DBMS_OUTPUT.PUT_LINE ('POTENTIAL_CHANGED_NEW_PLAN : '||v_unq_sqlids.sql_id||', PHV : '||potential_changed_old_plan.plan_hash_value||', AVGSECS : '||potential_changed_old_plan.avgsec||', EXECS_TOTAL : '||potential_changed_old_plan.execs);
                                        END LOOP;
                                        FOR top_phvs_by_time in (select plan_hash_value,avgsec,execs from (select distinct(plan_hash_value),round(avg("avgsec"),4) avgsec,sum(executions) execs from (select a.instance_number inst_id, a.snap_id,a.plan_hash_value, begin_interval_time btime, abs(extract(minute from (end_interval_time-begin_interval_time)) + extract(hour from (end_interval_time-begin_interval_time))*60 + extract(day from (end_interval_time-begin_interval_time))*24*60) minutes,executions_delta executions, round(ELAPSED_TIME_delta/1000000/greatest(executions_delta,1),4) "avgsec" from dba_hist_SQLSTAT a, dba_hist_snapshot b where a.sql_id = v_unq_sqlids.sql_id and a.snap_id=b.snap_id and
a.instance_number=b.instance_number and a.executions_delta is not null and a.executions_delta > 0 order by snap_id , a.instance_number) group by plan_hash_value order by 2) where rownum <= 2)
                                        LOOP
                                                DBMS_OUTPUT.PUT_LINE ('TOP_PLAN_BY_AVG_EXEC_TIME : '||v_unq_sqlids.sql_id||', PHV : '||top_phvs_by_time.plan_hash_value||', AVGSECS : '||top_phvs_by_time.avgsec||', EXECS_TOTAL : '||top_phvs_by_time.execs);
                                        END LOOP;
                                        FOR top_phvs_by_execs in (select plan_hash_value,avgsec,execs from (select distinct(plan_hash_value),round(avg("avgsec"),4) avgsec,sum(executions) execs from (select a.instance_number inst_id, a.snap_id,a.plan_hash_value, begin_interval_time btime, abs(extract(minute from (end_interval_time-begin_interval_time)) + extract(hour from (end_interval_time-begin_interval_time))*60 + extract(day from (end_interval_time-begin_interval_time))*24*60) minutes,executions_delta executions, round(ELAPSED_TIME_delta/1000000/greatest(executions_delta,1),4) "avgsec" from dba_hist_SQLSTAT a, dba_hist_snapshot b where a.sql_id = v_unq_sqlids.sql_id and a.snap_id=b.snap_id and a.instance_number=b.instance_number and a.executions_delta is not null and a.executions_delta > 0 order by snap_id , a.instance_number) group by plan_hash_value order by 3 desc) where rownum <= 2)
                                        LOOP
                                                DBMS_OUTPUT.PUT_LINE ('TOP_PLAN_BY_MOST_EXECS : '||v_unq_sqlids.sql_id||', PHV : '||top_phvs_by_execs.plan_hash_value||', AVGSECS : '||top_phvs_by_execs.avgsec||', EXECS_TOTAL : '||top_phvs_by_execs.execs);
                                        END LOOP;
                                        dbms_output.put_line('------------------------------------------------------------------------------------------------------------');
                                        END IF;
                                END IF;
                                END LOOP;
                        END IF;
    END LOOP;
END;
/
